services:

  traefik:
    image: "traefik:2.4"
    container_name: topquote-traefik
    restart: always
    command:
      - "--log.level=DEBUG"
      - "--configFile=/config/traefik.yml"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./traefik.dev.yml:/config/traefik.yml"
      - "./traefik.dev-dynamic.yml:/config/dynamic.yml"
      - "letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.local`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.service=api@internal"

  db:
    ports:
      - "3307:3306"
    labels:
      - traefik.enable=false

  php:
    image: registry.mmsrv.nl/topquote-php:latest
    labels:
      - traefik.enable=false
    env_file:
      - .env.test

  nginx:
    container_name: topquote-nginx
    image: registry.mmsrv.nl/topquote-nginx:latest
    networks:
      default:
        aliases:
          - topquote.local
    env_file:
      - .env.test
    labels:
      - traefik.enable=true
      - traefik.http.routers.topquote.rule=Host(`topquote.local`, `www.topquote.local`)
      - traefik.http.routers.topquote.middlewares=www2nonwww@file
      - traefik.http.routers.topquote.entrypoints=websecure
      - traefik.http.routers.topquote.tls=true
      - traefik.http.routers.topquote.tls.certresolver=letsencrypt

      - traefik.http.routers.topquote2.rule=Host(`topquote.local`, `www.topquote.local`)
      - traefik.http.routers.topquote2.middlewares=redirect-https@file
      - traefik.http.routers.topquote2.entrypoints=web

  cache:
    container_name: topquote-cache
    image: redis:7.0-rc
    restart: always
    ports:
      - 6379
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/data
    depends_on:
      - db
    labels:
      - traefik.enable=false

volumes:
  cache:
    driver: local
  letsencrypt:
    driver: local