#!/bin/bash

REMOTE_USER=root
REMOTE_HOST=de.mmsrv.nl
REMOTE_PATH=/root/topquote.nl
# SSH_KEY=~/.ssh/id_rsa

set -e

WORK_DIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )/.."
cd $WORK_DIR

#
echo "Building..."

# Compile 
# docker run --rm --name topquote-onetime-compiler -it \
#     -v $(pwd)/app:/project/app \
#     -v $(pwd)/src:/project/src \
#     -v $(pwd)/webpack:/project/webpack \
#     -v $(pwd)/webpack.config.js:/project/webpack.config.js \
#     -v $(pwd)/package.json:/project/package.json \
#     -v $(pwd)/package-lock.json:/project/package-lock.json \
#     -w /project \
#     topquote-compiler \
#     npm run build

# Build and push app image
docker build --platform linux/amd64 --tag registry.mmsrv.nl/topquote-php:latest --push ./app 

# Build and push nginx image
docker build --platform linux/amd64 --tag registry.mmsrv.nl/topquote-nginx:latest --push ./nginx 

#
echo "Deploying..."

#
if [ -z $SSH_KEY ]; then 
    USE_SSH_KEY=""
else
    USE_SSH_KEY="-i $SSH_KEY"
fi

#
ssh $USE_SSH_KEY "$REMOTE_USER"@$REMOTE_HOST "cd $REMOTE_PATH && docker compose -f docker-compose.yml -f docker-compose.prod.yml down --remove-orphans"

# Copy files to server 
ssh $USE_SSH_KEY "$REMOTE_USER"@$REMOTE_HOST mkdir -p $REMOTE_PATH/{app,bin,import}
scp $USE_SSH_KEY $WORK_DIR/docker-compose{.prod.yml,.yml} "$REMOTE_USER"@$REMOTE_HOST:$REMOTE_PATH/
scp $USE_SSH_KEY $WORK_DIR/.env.production "$REMOTE_USER"@$REMOTE_HOST:$REMOTE_PATH/.env
scp $USE_SSH_KEY $WORK_DIR/bin/{prod,dbdump,clear-caches} "$REMOTE_USER"@$REMOTE_HOST:$REMOTE_PATH/bin/

rsync -rz $USE_SSH_KEY -e ssh $WORK_DIR/app/ "$REMOTE_USER"@$REMOTE_HOST:$REMOTE_PATH/app/ --exclude 'public/sitemap*'  --delete
rsync -rz $USE_SSH_KEY -e ssh $WORK_DIR/import/ "$REMOTE_USER"@$REMOTE_HOST:$REMOTE_PATH/import/ --delete

#
echo "Starting..."

ssh $USE_SSH_KEY "$REMOTE_USER"@$REMOTE_HOST "cd $REMOTE_PATH && bin/prod"

#
sleep 3

#
echo "Clearing caches..."

ssh $USE_SSH_KEY "$REMOTE_USER"@$REMOTE_HOST "cd $REMOTE_PATH && bin/clear-caches"

#
sleep 3

#
echo "Update sitemap..."

$WORK_DIR/bin/update-sitemap
